# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-latest
  # name: 'Self-hosted pool'
  # demands:
  # - Agent.Name -equals Agent 2

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      mkdir $(Agent.TempDirectory)/Artifact_A
      touch $(Agent.TempDirectory)/Artifact_A/sample_1.c
      touch $(Agent.TempDirectory)/Artifact_A/sample_2.c

      mkdir $(Agent.TempDirectory)/Artifact_B
      touch $(Agent.TempDirectory)/Artifact_B/sample_3.c
      touch $(Agent.TempDirectory)/Artifact_B/sample_4.c

- task: PublishBuildArtifacts@1
  displayName: 'Publish test build artifact'
  inputs:
    PathtoPublish: '$(Agent.TempDirectory)/Artifact_A'
    ArtifactName: 'Artifact_A'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  displayName: 'Publish test build artifact'
  inputs:
    PathtoPublish: '$(Agent.TempDirectory)/Artifact_B'
    ArtifactName: 'Artifact_B'
    publishLocation: 'Container'

- task: DownloadBuildArtifacts@0
  displayName: 'Download all artifact items'
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'Artifact_A'
    downloadPath: '$(System.ArtifactsDirectory)/Artifact_A/'

- task: DownloadBuildArtifacts@0
  displayName: 'Download only *.c filles from nested folder'
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'Artifact_B'
    itemPattern: 'Artifact_B/*.c'
    downloadPath: '$(System.ArtifactsDirectory)/Artifact_B/onlyCFile/'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'specific'
    itemPattern: |
      Artifact_A/*.c
      Artifact_B/*.c
    downloadPath: '$(System.ArtifactsDirectory)/onlyCFile/'